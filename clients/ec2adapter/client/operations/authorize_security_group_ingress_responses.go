// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"quortex.io/kubestitute/clients/ec2adapter/models"
)

// AuthorizeSecurityGroupIngressReader is a Reader for the AuthorizeSecurityGroupIngress structure.
type AuthorizeSecurityGroupIngressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthorizeSecurityGroupIngressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAuthorizeSecurityGroupIngressCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAuthorizeSecurityGroupIngressBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAuthorizeSecurityGroupIngressForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAuthorizeSecurityGroupIngressInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAuthorizeSecurityGroupIngressCreated creates a AuthorizeSecurityGroupIngressCreated with default headers values
func NewAuthorizeSecurityGroupIngressCreated() *AuthorizeSecurityGroupIngressCreated {
	return &AuthorizeSecurityGroupIngressCreated{}
}

/*
AuthorizeSecurityGroupIngressCreated handles this case with default header values.

Created
*/
type AuthorizeSecurityGroupIngressCreated struct {
	Payload *models.SecurityGroup
}

func (o *AuthorizeSecurityGroupIngressCreated) Error() string {
	return fmt.Sprintf("[POST /security-groups/{id}/ingress][%d] authorizeSecurityGroupIngressCreated  %+v", 201, o.Payload)
}

func (o *AuthorizeSecurityGroupIngressCreated) GetPayload() *models.SecurityGroup {
	return o.Payload
}

func (o *AuthorizeSecurityGroupIngressCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SecurityGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorizeSecurityGroupIngressBadRequest creates a AuthorizeSecurityGroupIngressBadRequest with default headers values
func NewAuthorizeSecurityGroupIngressBadRequest() *AuthorizeSecurityGroupIngressBadRequest {
	return &AuthorizeSecurityGroupIngressBadRequest{}
}

/*
AuthorizeSecurityGroupIngressBadRequest handles this case with default header values.

Bad Request
*/
type AuthorizeSecurityGroupIngressBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *AuthorizeSecurityGroupIngressBadRequest) Error() string {
	return fmt.Sprintf("[POST /security-groups/{id}/ingress][%d] authorizeSecurityGroupIngressBadRequest  %+v", 400, o.Payload)
}

func (o *AuthorizeSecurityGroupIngressBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AuthorizeSecurityGroupIngressBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorizeSecurityGroupIngressForbidden creates a AuthorizeSecurityGroupIngressForbidden with default headers values
func NewAuthorizeSecurityGroupIngressForbidden() *AuthorizeSecurityGroupIngressForbidden {
	return &AuthorizeSecurityGroupIngressForbidden{}
}

/*
AuthorizeSecurityGroupIngressForbidden handles this case with default header values.

Forbidden
*/
type AuthorizeSecurityGroupIngressForbidden struct {
	Payload *models.ErrorResponse
}

func (o *AuthorizeSecurityGroupIngressForbidden) Error() string {
	return fmt.Sprintf("[POST /security-groups/{id}/ingress][%d] authorizeSecurityGroupIngressForbidden  %+v", 403, o.Payload)
}

func (o *AuthorizeSecurityGroupIngressForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AuthorizeSecurityGroupIngressForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorizeSecurityGroupIngressInternalServerError creates a AuthorizeSecurityGroupIngressInternalServerError with default headers values
func NewAuthorizeSecurityGroupIngressInternalServerError() *AuthorizeSecurityGroupIngressInternalServerError {
	return &AuthorizeSecurityGroupIngressInternalServerError{}
}

/*
AuthorizeSecurityGroupIngressInternalServerError handles this case with default header values.

Internal Server Error
*/
type AuthorizeSecurityGroupIngressInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *AuthorizeSecurityGroupIngressInternalServerError) Error() string {
	return fmt.Sprintf("[POST /security-groups/{id}/ingress][%d] authorizeSecurityGroupIngressInternalServerError  %+v", 500, o.Payload)
}

func (o *AuthorizeSecurityGroupIngressInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *AuthorizeSecurityGroupIngressInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
