// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"quortex.io/kubestitute/clients/ec2adapter/models"
)

// DeleteAddressReader is a Reader for the DeleteAddress structure.
type DeleteAddressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAddressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteAddressNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAddressBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAddressForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAddressNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAddressInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteAddressNoContent creates a DeleteAddressNoContent with default headers values
func NewDeleteAddressNoContent() *DeleteAddressNoContent {
	return &DeleteAddressNoContent{}
}

/*
DeleteAddressNoContent handles this case with default header values.

No Content
*/
type DeleteAddressNoContent struct {
	Payload string
}

func (o *DeleteAddressNoContent) Error() string {
	return fmt.Sprintf("[DELETE /addresses/{id}][%d] deleteAddressNoContent  %+v", 204, o.Payload)
}

func (o *DeleteAddressNoContent) GetPayload() string {
	return o.Payload
}

func (o *DeleteAddressNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAddressBadRequest creates a DeleteAddressBadRequest with default headers values
func NewDeleteAddressBadRequest() *DeleteAddressBadRequest {
	return &DeleteAddressBadRequest{}
}

/*
DeleteAddressBadRequest handles this case with default header values.

Bad Request
*/
type DeleteAddressBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *DeleteAddressBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /addresses/{id}][%d] deleteAddressBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAddressBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteAddressBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAddressForbidden creates a DeleteAddressForbidden with default headers values
func NewDeleteAddressForbidden() *DeleteAddressForbidden {
	return &DeleteAddressForbidden{}
}

/*
DeleteAddressForbidden handles this case with default header values.

Forbidden
*/
type DeleteAddressForbidden struct {
	Payload *models.ErrorResponse
}

func (o *DeleteAddressForbidden) Error() string {
	return fmt.Sprintf("[DELETE /addresses/{id}][%d] deleteAddressForbidden  %+v", 403, o.Payload)
}

func (o *DeleteAddressForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteAddressForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAddressNotFound creates a DeleteAddressNotFound with default headers values
func NewDeleteAddressNotFound() *DeleteAddressNotFound {
	return &DeleteAddressNotFound{}
}

/*
DeleteAddressNotFound handles this case with default header values.

Not Found
*/
type DeleteAddressNotFound struct {
	Payload *models.ErrorResponse
}

func (o *DeleteAddressNotFound) Error() string {
	return fmt.Sprintf("[DELETE /addresses/{id}][%d] deleteAddressNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAddressNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteAddressNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAddressInternalServerError creates a DeleteAddressInternalServerError with default headers values
func NewDeleteAddressInternalServerError() *DeleteAddressInternalServerError {
	return &DeleteAddressInternalServerError{}
}

/*
DeleteAddressInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteAddressInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *DeleteAddressInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /addresses/{id}][%d] deleteAddressInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAddressInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteAddressInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
