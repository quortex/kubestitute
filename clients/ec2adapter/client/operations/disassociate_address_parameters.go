// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDisassociateAddressParams creates a new DisassociateAddressParams object
// with the default values initialized.
func NewDisassociateAddressParams() *DisassociateAddressParams {
	var ()
	return &DisassociateAddressParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDisassociateAddressParamsWithTimeout creates a new DisassociateAddressParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDisassociateAddressParamsWithTimeout(timeout time.Duration) *DisassociateAddressParams {
	var ()
	return &DisassociateAddressParams{

		timeout: timeout,
	}
}

// NewDisassociateAddressParamsWithContext creates a new DisassociateAddressParams object
// with the default values initialized, and the ability to set a context for a request
func NewDisassociateAddressParamsWithContext(ctx context.Context) *DisassociateAddressParams {
	var ()
	return &DisassociateAddressParams{

		Context: ctx,
	}
}

// NewDisassociateAddressParamsWithHTTPClient creates a new DisassociateAddressParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDisassociateAddressParamsWithHTTPClient(client *http.Client) *DisassociateAddressParams {
	var ()
	return &DisassociateAddressParams{
		HTTPClient: client,
	}
}

/*DisassociateAddressParams contains all the parameters to send to the API endpoint
for the disassociate address operation typically these are written to a http.Request
*/
type DisassociateAddressParams struct {

	/*AssociationID
	  The ElasticIP Association ID

	*/
	AssociationID *string
	/*ID
	  The ElasticIP Allocation ID

	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the disassociate address params
func (o *DisassociateAddressParams) WithTimeout(timeout time.Duration) *DisassociateAddressParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the disassociate address params
func (o *DisassociateAddressParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the disassociate address params
func (o *DisassociateAddressParams) WithContext(ctx context.Context) *DisassociateAddressParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the disassociate address params
func (o *DisassociateAddressParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the disassociate address params
func (o *DisassociateAddressParams) WithHTTPClient(client *http.Client) *DisassociateAddressParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the disassociate address params
func (o *DisassociateAddressParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAssociationID adds the associationID to the disassociate address params
func (o *DisassociateAddressParams) WithAssociationID(associationID *string) *DisassociateAddressParams {
	o.SetAssociationID(associationID)
	return o
}

// SetAssociationID adds the associationId to the disassociate address params
func (o *DisassociateAddressParams) SetAssociationID(associationID *string) {
	o.AssociationID = associationID
}

// WithID adds the id to the disassociate address params
func (o *DisassociateAddressParams) WithID(id string) *DisassociateAddressParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the disassociate address params
func (o *DisassociateAddressParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *DisassociateAddressParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AssociationID != nil {

		// query param association_id
		var qrAssociationID string
		if o.AssociationID != nil {
			qrAssociationID = *o.AssociationID
		}
		qAssociationID := qrAssociationID
		if qAssociationID != "" {
			if err := r.SetQueryParam("association_id", qAssociationID); err != nil {
				return err
			}
		}

	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
