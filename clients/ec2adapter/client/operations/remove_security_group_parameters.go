// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewRemoveSecurityGroupParams creates a new RemoveSecurityGroupParams object
// with the default values initialized.
func NewRemoveSecurityGroupParams() *RemoveSecurityGroupParams {
	var ()
	return &RemoveSecurityGroupParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRemoveSecurityGroupParamsWithTimeout creates a new RemoveSecurityGroupParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRemoveSecurityGroupParamsWithTimeout(timeout time.Duration) *RemoveSecurityGroupParams {
	var ()
	return &RemoveSecurityGroupParams{

		timeout: timeout,
	}
}

// NewRemoveSecurityGroupParamsWithContext creates a new RemoveSecurityGroupParams object
// with the default values initialized, and the ability to set a context for a request
func NewRemoveSecurityGroupParamsWithContext(ctx context.Context) *RemoveSecurityGroupParams {
	var ()
	return &RemoveSecurityGroupParams{

		Context: ctx,
	}
}

// NewRemoveSecurityGroupParamsWithHTTPClient creates a new RemoveSecurityGroupParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRemoveSecurityGroupParamsWithHTTPClient(client *http.Client) *RemoveSecurityGroupParams {
	var ()
	return &RemoveSecurityGroupParams{
		HTTPClient: client,
	}
}

/*RemoveSecurityGroupParams contains all the parameters to send to the API endpoint
for the remove security group operation typically these are written to a http.Request
*/
type RemoveSecurityGroupParams struct {

	/*ID
	  The SecurityGroup ID

	*/
	ID string
	/*InstanceID
	  The EC2 Instance ID

	*/
	InstanceID *string
	/*NetworkInterfaceID
	  The EC2 Network Interface ID

	*/
	NetworkInterfaceID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the remove security group params
func (o *RemoveSecurityGroupParams) WithTimeout(timeout time.Duration) *RemoveSecurityGroupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the remove security group params
func (o *RemoveSecurityGroupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the remove security group params
func (o *RemoveSecurityGroupParams) WithContext(ctx context.Context) *RemoveSecurityGroupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the remove security group params
func (o *RemoveSecurityGroupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the remove security group params
func (o *RemoveSecurityGroupParams) WithHTTPClient(client *http.Client) *RemoveSecurityGroupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the remove security group params
func (o *RemoveSecurityGroupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the remove security group params
func (o *RemoveSecurityGroupParams) WithID(id string) *RemoveSecurityGroupParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the remove security group params
func (o *RemoveSecurityGroupParams) SetID(id string) {
	o.ID = id
}

// WithInstanceID adds the instanceID to the remove security group params
func (o *RemoveSecurityGroupParams) WithInstanceID(instanceID *string) *RemoveSecurityGroupParams {
	o.SetInstanceID(instanceID)
	return o
}

// SetInstanceID adds the instanceId to the remove security group params
func (o *RemoveSecurityGroupParams) SetInstanceID(instanceID *string) {
	o.InstanceID = instanceID
}

// WithNetworkInterfaceID adds the networkInterfaceID to the remove security group params
func (o *RemoveSecurityGroupParams) WithNetworkInterfaceID(networkInterfaceID *string) *RemoveSecurityGroupParams {
	o.SetNetworkInterfaceID(networkInterfaceID)
	return o
}

// SetNetworkInterfaceID adds the networkInterfaceId to the remove security group params
func (o *RemoveSecurityGroupParams) SetNetworkInterfaceID(networkInterfaceID *string) {
	o.NetworkInterfaceID = networkInterfaceID
}

// WriteToRequest writes these params to a swagger request
func (o *RemoveSecurityGroupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.InstanceID != nil {

		// query param instance_id
		var qrInstanceID string
		if o.InstanceID != nil {
			qrInstanceID = *o.InstanceID
		}
		qInstanceID := qrInstanceID
		if qInstanceID != "" {
			if err := r.SetQueryParam("instance_id", qInstanceID); err != nil {
				return err
			}
		}

	}

	if o.NetworkInterfaceID != nil {

		// query param network_interface_id
		var qrNetworkInterfaceID string
		if o.NetworkInterfaceID != nil {
			qrNetworkInterfaceID = *o.NetworkInterfaceID
		}
		qNetworkInterfaceID := qrNetworkInterfaceID
		if qNetworkInterfaceID != "" {
			if err := r.SetQueryParam("network_interface_id", qNetworkInterfaceID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
