// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"quortex.io/kubestitute/clients/ec2adapter/models"
)

// CreateAddressReader is a Reader for the CreateAddress structure.
type CreateAddressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAddressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateAddressCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAddressBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateAddressForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateAddressNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateAddressInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateAddressCreated creates a CreateAddressCreated with default headers values
func NewCreateAddressCreated() *CreateAddressCreated {
	return &CreateAddressCreated{}
}

/*
CreateAddressCreated handles this case with default header values.

Created
*/
type CreateAddressCreated struct {
	Payload *models.Address
}

func (o *CreateAddressCreated) Error() string {
	return fmt.Sprintf("[POST /addresses][%d] createAddressCreated  %+v", 201, o.Payload)
}

func (o *CreateAddressCreated) GetPayload() *models.Address {
	return o.Payload
}

func (o *CreateAddressCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Address)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAddressBadRequest creates a CreateAddressBadRequest with default headers values
func NewCreateAddressBadRequest() *CreateAddressBadRequest {
	return &CreateAddressBadRequest{}
}

/*
CreateAddressBadRequest handles this case with default header values.

Bad Request
*/
type CreateAddressBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CreateAddressBadRequest) Error() string {
	return fmt.Sprintf("[POST /addresses][%d] createAddressBadRequest  %+v", 400, o.Payload)
}

func (o *CreateAddressBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateAddressBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAddressForbidden creates a CreateAddressForbidden with default headers values
func NewCreateAddressForbidden() *CreateAddressForbidden {
	return &CreateAddressForbidden{}
}

/*
CreateAddressForbidden handles this case with default header values.

Forbidden
*/
type CreateAddressForbidden struct {
	Payload *models.ErrorResponse
}

func (o *CreateAddressForbidden) Error() string {
	return fmt.Sprintf("[POST /addresses][%d] createAddressForbidden  %+v", 403, o.Payload)
}

func (o *CreateAddressForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateAddressForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAddressNotFound creates a CreateAddressNotFound with default headers values
func NewCreateAddressNotFound() *CreateAddressNotFound {
	return &CreateAddressNotFound{}
}

/*
CreateAddressNotFound handles this case with default header values.

Not Found
*/
type CreateAddressNotFound struct {
	Payload *models.ErrorResponse
}

func (o *CreateAddressNotFound) Error() string {
	return fmt.Sprintf("[POST /addresses][%d] createAddressNotFound  %+v", 404, o.Payload)
}

func (o *CreateAddressNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateAddressNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAddressInternalServerError creates a CreateAddressInternalServerError with default headers values
func NewCreateAddressInternalServerError() *CreateAddressInternalServerError {
	return &CreateAddressInternalServerError{}
}

/*
CreateAddressInternalServerError handles this case with default header values.

Internal Server Error
*/
type CreateAddressInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *CreateAddressInternalServerError) Error() string {
	return fmt.Sprintf("[POST /addresses][%d] createAddressInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateAddressInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateAddressInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
