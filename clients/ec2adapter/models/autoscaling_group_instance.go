// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AutoscalingGroupInstance autoscaling group instance
//
// swagger:model AutoscalingGroupInstance
type AutoscalingGroupInstance struct {

	// The Availability Zone in which the instance is running.
	AvailabilityZone string `json:"availability_zone,omitempty"`

	// The last reported health status of the instance. "Healthy" means that the
	// instance is healthy and should remain in service. "Unhealthy" means that
	// the instance is unhealthy and that Amazon EC2 Auto Scaling should terminate
	// and replace it.
	// Enum: [Healthy Unhealthy]
	HealthStatus string `json:"health_status,omitempty"`

	// The ID of the instance.
	InstanceID string `json:"instance_id,omitempty"`

	// The instance type of the EC2 instance.
	InstanceType string `json:"instance_type,omitempty"`

	// A description of the current lifecycle state. The Quarantined state is not
	// used.
	// Enum: [Pending Pending:Wait Pending:Proceed Quarantined InService Terminating Terminating:Wait Terminating:Proceed Terminated Detaching Detached EnteringStandby Standby]
	LifecycleState string `json:"lifecycle_state,omitempty"`

	// Indicates whether the instance is protected from termination by Amazon EC2
	// Auto Scaling when scaling in.
	ProtectedFromScaleIn bool `json:"protected_from_scale_in,omitempty"`

	// The number of capacity units contributed by the instance based on its instance
	// type.
	WeightedCapacity string `json:"weighted_capacity,omitempty"`
}

// Validate validates this autoscaling group instance
func (m *AutoscalingGroupInstance) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHealthStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLifecycleState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var autoscalingGroupInstanceTypeHealthStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Healthy","Unhealthy"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		autoscalingGroupInstanceTypeHealthStatusPropEnum = append(autoscalingGroupInstanceTypeHealthStatusPropEnum, v)
	}
}

const (

	// AutoscalingGroupInstanceHealthStatusHealthy captures enum value "Healthy"
	AutoscalingGroupInstanceHealthStatusHealthy string = "Healthy"

	// AutoscalingGroupInstanceHealthStatusUnhealthy captures enum value "Unhealthy"
	AutoscalingGroupInstanceHealthStatusUnhealthy string = "Unhealthy"
)

// prop value enum
func (m *AutoscalingGroupInstance) validateHealthStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, autoscalingGroupInstanceTypeHealthStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AutoscalingGroupInstance) validateHealthStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.HealthStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateHealthStatusEnum("health_status", "body", m.HealthStatus); err != nil {
		return err
	}

	return nil
}

var autoscalingGroupInstanceTypeLifecycleStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Pending","Pending:Wait","Pending:Proceed","Quarantined","InService","Terminating","Terminating:Wait","Terminating:Proceed","Terminated","Detaching","Detached","EnteringStandby","Standby"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		autoscalingGroupInstanceTypeLifecycleStatePropEnum = append(autoscalingGroupInstanceTypeLifecycleStatePropEnum, v)
	}
}

const (

	// AutoscalingGroupInstanceLifecycleStatePending captures enum value "Pending"
	AutoscalingGroupInstanceLifecycleStatePending string = "Pending"

	// AutoscalingGroupInstanceLifecycleStatePendingWait captures enum value "Pending:Wait"
	AutoscalingGroupInstanceLifecycleStatePendingWait string = "Pending:Wait"

	// AutoscalingGroupInstanceLifecycleStatePendingProceed captures enum value "Pending:Proceed"
	AutoscalingGroupInstanceLifecycleStatePendingProceed string = "Pending:Proceed"

	// AutoscalingGroupInstanceLifecycleStateQuarantined captures enum value "Quarantined"
	AutoscalingGroupInstanceLifecycleStateQuarantined string = "Quarantined"

	// AutoscalingGroupInstanceLifecycleStateInService captures enum value "InService"
	AutoscalingGroupInstanceLifecycleStateInService string = "InService"

	// AutoscalingGroupInstanceLifecycleStateTerminating captures enum value "Terminating"
	AutoscalingGroupInstanceLifecycleStateTerminating string = "Terminating"

	// AutoscalingGroupInstanceLifecycleStateTerminatingWait captures enum value "Terminating:Wait"
	AutoscalingGroupInstanceLifecycleStateTerminatingWait string = "Terminating:Wait"

	// AutoscalingGroupInstanceLifecycleStateTerminatingProceed captures enum value "Terminating:Proceed"
	AutoscalingGroupInstanceLifecycleStateTerminatingProceed string = "Terminating:Proceed"

	// AutoscalingGroupInstanceLifecycleStateTerminated captures enum value "Terminated"
	AutoscalingGroupInstanceLifecycleStateTerminated string = "Terminated"

	// AutoscalingGroupInstanceLifecycleStateDetaching captures enum value "Detaching"
	AutoscalingGroupInstanceLifecycleStateDetaching string = "Detaching"

	// AutoscalingGroupInstanceLifecycleStateDetached captures enum value "Detached"
	AutoscalingGroupInstanceLifecycleStateDetached string = "Detached"

	// AutoscalingGroupInstanceLifecycleStateEnteringStandby captures enum value "EnteringStandby"
	AutoscalingGroupInstanceLifecycleStateEnteringStandby string = "EnteringStandby"

	// AutoscalingGroupInstanceLifecycleStateStandby captures enum value "Standby"
	AutoscalingGroupInstanceLifecycleStateStandby string = "Standby"
)

// prop value enum
func (m *AutoscalingGroupInstance) validateLifecycleStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, autoscalingGroupInstanceTypeLifecycleStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AutoscalingGroupInstance) validateLifecycleState(formats strfmt.Registry) error {

	if swag.IsZero(m.LifecycleState) { // not required
		return nil
	}

	// value enum
	if err := m.validateLifecycleStateEnum("lifecycle_state", "body", m.LifecycleState); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AutoscalingGroupInstance) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AutoscalingGroupInstance) UnmarshalBinary(b []byte) error {
	var res AutoscalingGroupInstance
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
